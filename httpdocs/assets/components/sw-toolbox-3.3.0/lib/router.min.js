'use strict';var Route=require('./route');var helpers=require('./helpers');function regexEscape(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');}
var keyMatch=function(map,string){var entriesIterator=map.entries();var item=entriesIterator.next();var matches=[];while(!item.done){var pattern=new RegExp(item.value[0]);if(pattern.test(string)){matches.push(item.value[1]);}
item=entriesIterator.next();}
return matches;};var Router=function(){this.routes=new Map();this.routes.set(RegExp,new Map());this.default=null;};['get','post','put','delete','head','any'].forEach(function(method){Router.prototype[method]=function(path,handler,options){return this.add(method,path,handler,options);};});Router.prototype.add=function(method,path,handler,options){options=options||{};var origin;if(path instanceof RegExp){origin=RegExp;}else{origin=options.origin||self.location.origin;if(origin instanceof RegExp){origin=origin.source;}else{origin=regexEscape(origin);}}
method=method.toLowerCase();var route=new Route(method,path,handler,options);if(!this.routes.has(origin)){this.routes.set(origin,new Map());}
var methodMap=this.routes.get(origin);if(!methodMap.has(method)){methodMap.set(method,new Map());}
var routeMap=methodMap.get(method);var regExp=route.regexp||route.fullUrlRegExp;if(routeMap.has(regExp.source)){helpers.debug('"'+path+'" resolves to same regex as existing route.');}
routeMap.set(regExp.source,route);};Router.prototype.matchMethod=function(method,url){var urlObject=new URL(url);var origin=urlObject.origin;var path=urlObject.pathname;return this._match(method,keyMatch(this.routes,origin),path)||this._match(method,[this.routes.get(RegExp)],url);};Router.prototype._match=function(method,methodMaps,pathOrUrl){if(methodMaps.length===0){return null;}
for(var i=0;i<methodMaps.length;i++){var methodMap=methodMaps[i];var routeMap=methodMap&&methodMap.get(method.toLowerCase());if(routeMap){var routes=keyMatch(routeMap,pathOrUrl);if(routes.length>0){return routes[0].makeHandler(pathOrUrl);}}}
return null;};Router.prototype.match=function(request){return this.matchMethod(request.method,request.url)||this.matchMethod('any',request.url);};module.exports=new Router();