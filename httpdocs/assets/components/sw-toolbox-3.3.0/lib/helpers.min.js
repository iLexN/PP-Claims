'use strict';var globalOptions=require('./options');var idbCacheExpiration=require('./idb-cache-expiration');function debug(message,options){options=options||{};var flag=options.debug||globalOptions.debug;if(flag){console.log('[sw-toolbox] '+message);}}
function openCache(options){var cacheName;if(options&&options.cache){cacheName=options.cache.name;}
cacheName=cacheName||globalOptions.cache.name;return caches.open(cacheName);}
function fetchAndCache(request,options){options=options||{};var successResponses=options.successResponses||globalOptions.successResponses;return fetch(request.clone()).then(function(response){if(request.method==='GET'&&successResponses.test(response.status)){openCache(options).then(function(cache){cache.put(request,response).then(function(){var cacheOptions=options.cache||globalOptions.cache;if((cacheOptions.maxEntries||cacheOptions.maxAgeSeconds)&&cacheOptions.name){queueCacheExpiration(request,cache,cacheOptions);}});});}
return response.clone();});}
var cleanupQueue;function queueCacheExpiration(request,cache,cacheOptions){var cleanup=cleanupCache.bind(null,request,cache,cacheOptions);if(cleanupQueue){cleanupQueue=cleanupQueue.then(cleanup);}else{cleanupQueue=cleanup();}}
function cleanupCache(request,cache,cacheOptions){var requestUrl=request.url;var maxAgeSeconds=cacheOptions.maxAgeSeconds;var maxEntries=cacheOptions.maxEntries;var cacheName=cacheOptions.name;var now=Date.now();debug('Updating LRU order for '+requestUrl+'. Max entries is '+
maxEntries+', max age is '+maxAgeSeconds);return idbCacheExpiration.getDb(cacheName).then(function(db){return idbCacheExpiration.setTimestampForUrl(db,requestUrl,now);}).then(function(db){return idbCacheExpiration.expireEntries(db,maxEntries,maxAgeSeconds,now);}).then(function(urlsToDelete){debug('Successfully updated IDB.');var deletionPromises=urlsToDelete.map(function(urlToDelete){return cache.delete(urlToDelete);});return Promise.all(deletionPromises).then(function(){debug('Done with cache cleanup.');});}).catch(function(error){debug(error);});}
function renameCache(source,destination,options){debug('Renaming cache: ['+source+'] to ['+destination+']',options);return caches.delete(destination).then(function(){return Promise.all([caches.open(source),caches.open(destination)]).then(function(results){var sourceCache=results[0];var destCache=results[1];return sourceCache.keys().then(function(requests){return Promise.all(requests.map(function(request){return sourceCache.match(request).then(function(response){return destCache.put(request,response);});}));}).then(function(){return caches.delete(source);});});});}
module.exports={debug:debug,fetchAndCache:fetchAndCache,openCache:openCache,renameCache:renameCache};