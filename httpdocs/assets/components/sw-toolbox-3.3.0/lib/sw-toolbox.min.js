'use strict';require('serviceworker-cache-polyfill');var options=require('./options');var router=require('./router');var helpers=require('./helpers');var strategies=require('./strategies');helpers.debug('Service Worker Toolbox is loading');var flatten=function(items){return items.reduce(function(a,b){return a.concat(b);},[]);};var validatePrecacheInput=function(items){var isValid=Array.isArray(items);if(isValid){items.forEach(function(item){if(!(typeof item==='string'||(item instanceof Request))){isValid=false;}});}
if(!isValid){throw new TypeError('The precache method expects either an array of '+'strings and/or Requests or a Promise that resolves to an array of '+'strings and/or Requests.');}
return items;};self.addEventListener('install',function(event){var inactiveCache=options.cache.name+'$$$inactive$$$';helpers.debug('install event fired');helpers.debug('creating cache ['+inactiveCache+']');event.waitUntil(helpers.openCache({cache:{name:inactiveCache}}).then(function(cache){return Promise.all(options.preCacheItems).then(flatten).then(validatePrecacheInput).then(function(preCacheItems){helpers.debug('preCache list: '+
(preCacheItems.join(', ')||'(none)'));return cache.addAll(preCacheItems);});}));});self.addEventListener('activate',function(event){helpers.debug('activate event fired');var inactiveCache=options.cache.name+'$$$inactive$$$';event.waitUntil(helpers.renameCache(inactiveCache,options.cache.name));});self.addEventListener('fetch',function(event){var handler=router.match(event.request);if(handler){event.respondWith(handler(event.request));}else if(router.default&&event.request.method==='GET'){event.respondWith(router.default(event.request));}});function cache(url,options){return helpers.openCache(options).then(function(cache){return cache.add(url);});}
function uncache(url,options){return helpers.openCache(options).then(function(cache){return cache.delete(url);});}
function precache(items){if(!(items instanceof Promise)){validatePrecacheInput(items);}
options.preCacheItems=options.preCacheItems.concat(items);}
module.exports={networkOnly:strategies.networkOnly,networkFirst:strategies.networkFirst,cacheOnly:strategies.cacheOnly,cacheFirst:strategies.cacheFirst,fastest:strategies.fastest,router:router,options:options,cache:cache,uncache:uncache,precache:precache};